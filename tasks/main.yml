---
# tasks file for daixijun.php-redis
- name: Verify redis extension is installed
  stat:
    path: "{{ ansible_local.php.extension_dir }}/redis.so"
  register: php_redis_installed_stat

- name: Check php redis package is already exists
  stat:
    path: "{{ playbook_dir }}/files/{{ php_redis_download_url | basename }}"
  become: false
  run_once: true
  delegate_to: localhost
  register: _php_redis_package_stat

- name: Download php redis package
  get_url:
    url: "{{ php_redis_download_url }}"
    dest: "{{ playbook_dir }}/files/{{ php_redis_download_url | basename }}"
  become: false
  run_once: true
  delegate_to: localhost
  register: _php_redis_package
  when:
    - not _php_redis_package_stat.stat.exists
    - not php_redis_installed_stat.stat.exists

- name: Unarchive php-redis {{ php_redis_version }}
  unarchive:
    src: "files/{{ php_redis_download_url | basename }}"
    dest: /usr/local/src/
    remote_src: false
    creates: /usr/local/src/redis-{{ php_redis_version }}
  when:
    - not php_redis_installed_stat.stat.exists and (_php_redis_package is not skipped or _php_redis_package_stat.stat.exists)

- name: Install
  command: "{{ item }}"
  args:
    chdir: "/usr/local/src/redis-{{ php_redis_version }}"
    warn: false
  loop:
    - /usr/local/php/bin/phpize
    - ./configure --with-php-config=/usr/local/php/bin/php-config
    - make
    - make install
    - chown {{ ansible_local.php.web_user }}:{{ ansible_local.php.web_user }} {{ ansible_local.php.extension_dir }}/redis.so
  when:
    - not php_redis_installed_stat.stat.exists
  tags:
    - skip_ansible_lint

- name: Generate configuration file
  copy:
    content: "extension=redis.so"
    dest: /usr/local/php/etc/php.d/redis.ini
    mode: "644"
    owner: "{{ ansible_local.php.web_user }}"
    group: "{{ ansible_local.php.web_user }}"
  notify:
    - restart php-fpm

- name: Clean package
  file:
    path: "/usr/local/src/redis-{{ php_redis_version }}"
    state: absent
